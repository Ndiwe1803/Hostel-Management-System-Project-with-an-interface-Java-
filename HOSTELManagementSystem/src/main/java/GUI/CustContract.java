/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

/**
 *
 * @author G5
 */
public class CustContract extends javax.swing.JFrame {

    /** Creates new form CustContract */
    public CustContract() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(350, 400));

        jPanel9.setBackground(new java.awt.Color(51, 153, 255));

        jButton20.setBackground(new java.awt.Color(255, 255, 255));
        jButton20.setText("back");

        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 153, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("Hotel Room Booking Contract\n\nThis contract (the \"Contract\") is entered into between the hotel, referred to as the \"Hotel,\" and the guest, referred to as the \"Guest,\" for the purpose of booking a hotel room. The terms and conditions outlined in this Contract apply to the booking and stay in the designated hotel room.\n\n1. Room Details:\n   - Room Capacity:\n   - Room Number: \n   - Check-in Date: \n   - Check-out Date:\n   - Duration of Stay: \n\n2. Facilities and Amenities:\nWi-Fi: High-speed internet connectivity.\nAir Conditioning: Climate control to maintain a comfortable temperature.\nTelevision: Cable or satellite TV with a variety of channels.\nMini Refrigerator: Small refrigerator for storing food and beverages.\nCoffee/Tea Maker: Facilities for making coffee or tea in the room.\nSafe: Secure storage for valuable items.\nIron and Ironing Board: For guests to press their clothes.\nHairdryer: Provided for guests' convenience.\nWork Desk: A dedicated space with a desk and chair for working.\nTelephone: Direct dial telephone for local and international calls.\nWardrobe/Closet: Storage space for clothes and personal belongings.\nComplimentary Toiletries: Basic toiletries such as shampoo, soap, and towels.\nRoom Service: The option to order food and beverages to be delivered to the room.\nDaily Housekeeping: Regular cleaning and tidying of the room.\n24-Hour Front Desk: Round-the-clock assistance and concierge services.\nFitness Center: On-site gym or fitness facilities for guests to use.\nSwimming Pool: An indoor or outdoor pool for recreational purposes.\nRestaurant: On-site dining options for breakfast, lunch, and dinner.\nBusiness Center: Facilities for printing, photocopying, and other business needs.\nLaundry Service: On-site laundry facilities or a laundry service for guests.\n\n3. Rules and Regulations:\n   The Guest agrees to abide by the following rules and regulations during their stay:\n\n   a. Check-in and Check-out:\n      - The standard check-in time is [Specify the check-in time], and the check-out time is [Specify the check-out time].\n      - Early check-in or late check-out may be subject to additional charges and availability.\n\n   b. Occupancy:\n      - The hotel room is strictly for the use and occupancy of the Guest(s) mentioned in the booking.\n      - The number of occupants should not exceed the maximum capacity of the room as specified by the Hotel.\n\n   c. Security and Valuables:\n      - The Hotel shall not be held responsible for any loss or damage to the Guest's personal belongings or valuables during their stay.\n      - The Guest is advised to use the provided safety deposit box or locker for securing their valuable items.\n\n   d. Noise and Conduct:\n      - The Guest agrees to maintain proper decorum and not create any disturbance or inconvenience to other guests.\n      - Excessive noise or disruptive behavior may result in eviction from the premises without any refund.\n\n   e. Smoking and Substance Use:\n      - Smoking is strictly prohibited in all areas of the hotel, including the hotel room. Designated smoking areas are available.\n      - The use of illegal substances within the hotel premises is strictly prohibited.\n\n   f. Damages and Liabilities:\n      - The Guest shall be liable for any damages caused to the hotel room or its facilities during their stay.\n      - The Guest will be responsible for reimbursing the Hotel for any repair or replacement costs incurred due to their actions.\n\n4. Payment and Cancellation:\n   - The Guest agrees to pay the specified room rate for the duration of their stay, as mentioned in the booking.\n   - Any additional charges for extra services or facilities availed by the Guest shall be settled upon check-out.\n   - Cancellation or modification of the booking may be subject to the Hotel's cancellation policy and applicable charges.\n\n5. Indemnity:\n   The Guest agrees to indemnify and hold the Hotel harmless from any claims, losses, damages, or liabilities arising from their stay, including but not limited to personal injury, property damage, or violation of any laws or regulations.\n\nBy Clicking the button below, the Guest acknowledges that they have read, understood, and agree to the terms and conditions outlined in this Contract. The Hotel and the Guest hereby enter into this agreement as of the date first written below.\n");
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(51, 153, 255));
        jButton1.setText("Accept");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 272, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jButton20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustContract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton20;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
